name: Update README.md lists

on:
  workflow_dispatch:
  push:
    paths:
      - bucket/*.json
      - README.md

jobs:
  update_readme:
    name: Update README.md
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update README
        shell: python
        run: |
          import re, json
          from pathlib import Path

          README = Path("README.md")
          BUCKET = Path("bucket")
          re_start = re.compile(r"^<!--LIST:(.*):START-->$")
          re_end = re.compile(r"^<!--LIST:END-->$")

          def get_packages_by(criteria):
            for file in BUCKET.iterdir():
              with file.open("r") as f:
                manifest = json.load(f)

              attrs = manifest.get("##", [])
              if not isinstance(attrs, list):
                # This isn't our custom attribute list
                continue

              if not set(attrs).isdisjoint(criteria):
                yield file, manifest

          def insert_list(file, criteria):
            for file, manifest in get_packages_by(criteria):
              name = file.stem
              path = str(file)
              version = manifest.get("version", "")
              desc = manifest.get("description", "")
              print(f"- [__{name}__]({path}) <sup>(v{version}) {desc}</sup>", file=file)

          with README.open("rt") as f:
            previous_readme = iter(f.readlines())

          with README.open("wt") as f:
            for line in previous_readme:
              match = re_start.match(line)
              if match:
                # Reinsert the line for future updates
                f.write(line)

                # Insert list with criteria
                criteria = match.group(1).split(",")
                insert_list(f, criteria)

                # Skip previous contents until END mark
                for line in previous_readme:
                  if re_end.match(line):
                    f.write(line)
                    break
              else:
                # Keep previous contents
                f.write(line)
      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: '[CI-BOT] Update README lists'
